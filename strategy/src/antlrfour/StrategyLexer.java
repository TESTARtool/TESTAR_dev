// Generated from C:/Users/lh3/IdeaProjects/TESTAR/strategy/src/antlrfour\Strategy.g4 by ANTLR 4.9.2
package antlrfour;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class StrategyLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, ACTION_VISITED=21, EXIST=22, FILTER=23, 
		NOT=24, AND=25, XOR=26, OR=27, GT=28, GE=29, LT=30, LE=31, EQ=32, NE=33, 
		IF=34, THEN=35, ELSE=36, NUMBER=37, BOOLEAN=38, LP=39, RP=40, COMMENT=41, 
		WHITESPACE=42, ANY=43;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "ACTION_VISITED", "EXIST", "FILTER", "NOT", 
			"AND", "XOR", "OR", "GT", "GE", "LT", "LE", "EQ", "NE", "IF", "THEN", 
			"ELSE", "NUMBER", "BOOLEAN", "LP", "RP", "COMMENT", "WHITESPACE", "TRUE", 
			"FALSE", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", 
			"M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", 
			"ANY"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'n-actions'", "'state-changed'", "'any-actions'", "'sut'", "'select-previous-action'", 
			"'select-random'", "'select-by-relation'", "'sibling-action'", "'child-action'", 
			"'sibling-or-child-action'", "'windows'", "'linux'", "'android'", "'web'", 
			"'click-action'", "'type-action'", "'drag-action'", "'scroll-action'", 
			"'hit-key-action'", "'input-action'", null, null, null, null, null, null, 
			null, "'>'", "'>='", "'<'", "'<='", null, "'!='", null, null, null, null, 
			null, "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, "ACTION_VISITED", 
			"EXIST", "FILTER", "NOT", "AND", "XOR", "OR", "GT", "GE", "LT", "LE", 
			"EQ", "NE", "IF", "THEN", "ELSE", "NUMBER", "BOOLEAN", "LP", "RP", "COMMENT", 
			"WHITESPACE", "ANY"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public StrategyLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Strategy.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2-\u027b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\3\2"+
		"\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4"+
		"\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3"+
		"\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3"+
		"\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t"+
		"\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3"+
		"\n\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3"+
		"\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22"+
		"\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26"+
		"\5\26\u01b8\n\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\5\27\u01c5\n\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u01d9\n\30\3\31\3\31\3\31\3\31"+
		"\3\31\5\31\u01e0\n\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u01e9\n"+
		"\32\3\33\3\33\3\33\3\33\3\33\5\33\u01f0\n\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\5\34\u01f8\n\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3"+
		"!\3!\5!\u0207\n!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3"+
		"&\6&\u021a\n&\r&\16&\u021b\3\'\3\'\5\'\u0220\n\'\3(\3(\3)\3)\3*\3*\3*"+
		"\3*\7*\u022a\n*\f*\16*\u022d\13*\3*\3*\3*\3*\3*\3+\6+\u0235\n+\r+\16+"+
		"\u0236\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3/\3/\3\60\3\60\3"+
		"\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"8\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3C\3"+
		"C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3\u022b\2I\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W\2Y\2[\2]\2_\2a\2c\2e\2g\2i\2k\2m\2o\2q\2s\2u\2w\2y\2{\2}\2\177\2\u0081"+
		"\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f-\3\2\37\4\2#"+
		"#\u0080\u0080\3\2\62;\5\2\13\f\17\17\"\"\4\2CCcc\4\2DDdd\4\2EEee\4\2F"+
		"Fff\4\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4"+
		"\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWw"+
		"w\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\2\u026e\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2\u008f"+
		"\3\2\2\2\3\u0091\3\2\2\2\5\u009b\3\2\2\2\7\u00a9\3\2\2\2\t\u00b5\3\2\2"+
		"\2\13\u00b9\3\2\2\2\r\u00d0\3\2\2\2\17\u00de\3\2\2\2\21\u00f1\3\2\2\2"+
		"\23\u0100\3\2\2\2\25\u010d\3\2\2\2\27\u0125\3\2\2\2\31\u012d\3\2\2\2\33"+
		"\u0133\3\2\2\2\35\u013b\3\2\2\2\37\u013f\3\2\2\2!\u014c\3\2\2\2#\u0158"+
		"\3\2\2\2%\u0164\3\2\2\2\'\u0172\3\2\2\2)\u0181\3\2\2\2+\u01b7\3\2\2\2"+
		"-\u01c4\3\2\2\2/\u01d8\3\2\2\2\61\u01df\3\2\2\2\63\u01e8\3\2\2\2\65\u01ef"+
		"\3\2\2\2\67\u01f7\3\2\2\29\u01f9\3\2\2\2;\u01fb\3\2\2\2=\u01fe\3\2\2\2"+
		"?\u0200\3\2\2\2A\u0206\3\2\2\2C\u0208\3\2\2\2E\u020b\3\2\2\2G\u020e\3"+
		"\2\2\2I\u0213\3\2\2\2K\u0219\3\2\2\2M\u021f\3\2\2\2O\u0221\3\2\2\2Q\u0223"+
		"\3\2\2\2S\u0225\3\2\2\2U\u0234\3\2\2\2W\u023a\3\2\2\2Y\u023f\3\2\2\2["+
		"\u0245\3\2\2\2]\u0247\3\2\2\2_\u0249\3\2\2\2a\u024b\3\2\2\2c\u024d\3\2"+
		"\2\2e\u024f\3\2\2\2g\u0251\3\2\2\2i\u0253\3\2\2\2k\u0255\3\2\2\2m\u0257"+
		"\3\2\2\2o\u0259\3\2\2\2q\u025b\3\2\2\2s\u025d\3\2\2\2u\u025f\3\2\2\2w"+
		"\u0261\3\2\2\2y\u0263\3\2\2\2{\u0265\3\2\2\2}\u0267\3\2\2\2\177\u0269"+
		"\3\2\2\2\u0081\u026b\3\2\2\2\u0083\u026d\3\2\2\2\u0085\u026f\3\2\2\2\u0087"+
		"\u0271\3\2\2\2\u0089\u0273\3\2\2\2\u008b\u0275\3\2\2\2\u008d\u0277\3\2"+
		"\2\2\u008f\u0279\3\2\2\2\u0091\u0092\7p\2\2\u0092\u0093\7/\2\2\u0093\u0094"+
		"\7c\2\2\u0094\u0095\7e\2\2\u0095\u0096\7v\2\2\u0096\u0097\7k\2\2\u0097"+
		"\u0098\7q\2\2\u0098\u0099\7p\2\2\u0099\u009a\7u\2\2\u009a\4\3\2\2\2\u009b"+
		"\u009c\7u\2\2\u009c\u009d\7v\2\2\u009d\u009e\7c\2\2\u009e\u009f\7v\2\2"+
		"\u009f\u00a0\7g\2\2\u00a0\u00a1\7/\2\2\u00a1\u00a2\7e\2\2\u00a2\u00a3"+
		"\7j\2\2\u00a3\u00a4\7c\2\2\u00a4\u00a5\7p\2\2\u00a5\u00a6\7i\2\2\u00a6"+
		"\u00a7\7g\2\2\u00a7\u00a8\7f\2\2\u00a8\6\3\2\2\2\u00a9\u00aa\7c\2\2\u00aa"+
		"\u00ab\7p\2\2\u00ab\u00ac\7{\2\2\u00ac\u00ad\7/\2\2\u00ad\u00ae\7c\2\2"+
		"\u00ae\u00af\7e\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7k\2\2\u00b1\u00b2"+
		"\7q\2\2\u00b2\u00b3\7p\2\2\u00b3\u00b4\7u\2\2\u00b4\b\3\2\2\2\u00b5\u00b6"+
		"\7u\2\2\u00b6\u00b7\7w\2\2\u00b7\u00b8\7v\2\2\u00b8\n\3\2\2\2\u00b9\u00ba"+
		"\7u\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7n\2\2\u00bc\u00bd\7g\2\2\u00bd"+
		"\u00be\7e\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7/\2\2\u00c0\u00c1\7r\2\2"+
		"\u00c1\u00c2\7t\2\2\u00c2\u00c3\7g\2\2\u00c3\u00c4\7x\2\2\u00c4\u00c5"+
		"\7k\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7\7w\2\2\u00c7\u00c8\7u\2\2\u00c8"+
		"\u00c9\7/\2\2\u00c9\u00ca\7c\2\2\u00ca\u00cb\7e\2\2\u00cb\u00cc\7v\2\2"+
		"\u00cc\u00cd\7k\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7p\2\2\u00cf\f\3\2"+
		"\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4"+
		"\7g\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7/\2\2\u00d7"+
		"\u00d8\7t\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7p\2\2\u00da\u00db\7f\2\2"+
		"\u00db\u00dc\7q\2\2\u00dc\u00dd\7o\2\2\u00dd\16\3\2\2\2\u00de\u00df\7"+
		"u\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1\7n\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3"+
		"\7e\2\2\u00e3\u00e4\7v\2\2\u00e4\u00e5\7/\2\2\u00e5\u00e6\7d\2\2\u00e6"+
		"\u00e7\7{\2\2\u00e7\u00e8\7/\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea\7g\2\2"+
		"\u00ea\u00eb\7n\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee"+
		"\7k\2\2\u00ee\u00ef\7q\2\2\u00ef\u00f0\7p\2\2\u00f0\20\3\2\2\2\u00f1\u00f2"+
		"\7u\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7d\2\2\u00f4\u00f5\7n\2\2\u00f5"+
		"\u00f6\7k\2\2\u00f6\u00f7\7p\2\2\u00f7\u00f8\7i\2\2\u00f8\u00f9\7/\2\2"+
		"\u00f9\u00fa\7c\2\2\u00fa\u00fb\7e\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd"+
		"\7k\2\2\u00fd\u00fe\7q\2\2\u00fe\u00ff\7p\2\2\u00ff\22\3\2\2\2\u0100\u0101"+
		"\7e\2\2\u0101\u0102\7j\2\2\u0102\u0103\7k\2\2\u0103\u0104\7n\2\2\u0104"+
		"\u0105\7f\2\2\u0105\u0106\7/\2\2\u0106\u0107\7c\2\2\u0107\u0108\7e\2\2"+
		"\u0108\u0109\7v\2\2\u0109\u010a\7k\2\2\u010a\u010b\7q\2\2\u010b\u010c"+
		"\7p\2\2\u010c\24\3\2\2\2\u010d\u010e\7u\2\2\u010e\u010f\7k\2\2\u010f\u0110"+
		"\7d\2\2\u0110\u0111\7n\2\2\u0111\u0112\7k\2\2\u0112\u0113\7p\2\2\u0113"+
		"\u0114\7i\2\2\u0114\u0115\7/\2\2\u0115\u0116\7q\2\2\u0116\u0117\7t\2\2"+
		"\u0117\u0118\7/\2\2\u0118\u0119\7e\2\2\u0119\u011a\7j\2\2\u011a\u011b"+
		"\7k\2\2\u011b\u011c\7n\2\2\u011c\u011d\7f\2\2\u011d\u011e\7/\2\2\u011e"+
		"\u011f\7c\2\2\u011f\u0120\7e\2\2\u0120\u0121\7v\2\2\u0121\u0122\7k\2\2"+
		"\u0122\u0123\7q\2\2\u0123\u0124\7p\2\2\u0124\26\3\2\2\2\u0125\u0126\7"+
		"y\2\2\u0126\u0127\7k\2\2\u0127\u0128\7p\2\2\u0128\u0129\7f\2\2\u0129\u012a"+
		"\7q\2\2\u012a\u012b\7y\2\2\u012b\u012c\7u\2\2\u012c\30\3\2\2\2\u012d\u012e"+
		"\7n\2\2\u012e\u012f\7k\2\2\u012f\u0130\7p\2\2\u0130\u0131\7w\2\2\u0131"+
		"\u0132\7z\2\2\u0132\32\3\2\2\2\u0133\u0134\7c\2\2\u0134\u0135\7p\2\2\u0135"+
		"\u0136\7f\2\2\u0136\u0137\7t\2\2\u0137\u0138\7q\2\2\u0138\u0139\7k\2\2"+
		"\u0139\u013a\7f\2\2\u013a\34\3\2\2\2\u013b\u013c\7y\2\2\u013c\u013d\7"+
		"g\2\2\u013d\u013e\7d\2\2\u013e\36\3\2\2\2\u013f\u0140\7e\2\2\u0140\u0141"+
		"\7n\2\2\u0141\u0142\7k\2\2\u0142\u0143\7e\2\2\u0143\u0144\7m\2\2\u0144"+
		"\u0145\7/\2\2\u0145\u0146\7c\2\2\u0146\u0147\7e\2\2\u0147\u0148\7v\2\2"+
		"\u0148\u0149\7k\2\2\u0149\u014a\7q\2\2\u014a\u014b\7p\2\2\u014b \3\2\2"+
		"\2\u014c\u014d\7v\2\2\u014d\u014e\7{\2\2\u014e\u014f\7r\2\2\u014f\u0150"+
		"\7g\2\2\u0150\u0151\7/\2\2\u0151\u0152\7c\2\2\u0152\u0153\7e\2\2\u0153"+
		"\u0154\7v\2\2\u0154\u0155\7k\2\2\u0155\u0156\7q\2\2\u0156\u0157\7p\2\2"+
		"\u0157\"\3\2\2\2\u0158\u0159\7f\2\2\u0159\u015a\7t\2\2\u015a\u015b\7c"+
		"\2\2\u015b\u015c\7i\2\2\u015c\u015d\7/\2\2\u015d\u015e\7c\2\2\u015e\u015f"+
		"\7e\2\2\u015f\u0160\7v\2\2\u0160\u0161\7k\2\2\u0161\u0162\7q\2\2\u0162"+
		"\u0163\7p\2\2\u0163$\3\2\2\2\u0164\u0165\7u\2\2\u0165\u0166\7e\2\2\u0166"+
		"\u0167\7t\2\2\u0167\u0168\7q\2\2\u0168\u0169\7n\2\2\u0169\u016a\7n\2\2"+
		"\u016a\u016b\7/\2\2\u016b\u016c\7c\2\2\u016c\u016d\7e\2\2\u016d\u016e"+
		"\7v\2\2\u016e\u016f\7k\2\2\u016f\u0170\7q\2\2\u0170\u0171\7p\2\2\u0171"+
		"&\3\2\2\2\u0172\u0173\7j\2\2\u0173\u0174\7k\2\2\u0174\u0175\7v\2\2\u0175"+
		"\u0176\7/\2\2\u0176\u0177\7m\2\2\u0177\u0178\7g\2\2\u0178\u0179\7{\2\2"+
		"\u0179\u017a\7/\2\2\u017a\u017b\7c\2\2\u017b\u017c\7e\2\2\u017c\u017d"+
		"\7v\2\2\u017d\u017e\7k\2\2\u017e\u017f\7q\2\2\u017f\u0180\7p\2\2\u0180"+
		"(\3\2\2\2\u0181\u0182\7k\2\2\u0182\u0183\7p\2\2\u0183\u0184\7r\2\2\u0184"+
		"\u0185\7w\2\2\u0185\u0186\7v\2\2\u0186\u0187\7/\2\2\u0187\u0188\7c\2\2"+
		"\u0188\u0189\7e\2\2\u0189\u018a\7v\2\2\u018a\u018b\7k\2\2\u018b\u018c"+
		"\7q\2\2\u018c\u018d\7p\2\2\u018d*\3\2\2\2\u018e\u018f\7x\2\2\u018f\u0190"+
		"\7k\2\2\u0190\u0191\7u\2\2\u0191\u0192\7k\2\2\u0192\u0193\7v\2\2\u0193"+
		"\u0194\7g\2\2\u0194\u01b8\7f\2\2\u0195\u0196\7w\2\2\u0196\u0197\7p\2\2"+
		"\u0197\u0198\7x\2\2\u0198\u0199\7k\2\2\u0199\u019a\7u\2\2\u019a\u019b"+
		"\7k\2\2\u019b\u019c\7v\2\2\u019c\u019d\7g\2\2\u019d\u01b8\7f\2\2\u019e"+
		"\u019f\7o\2\2\u019f\u01a0\7q\2\2\u01a0\u01a1\7u\2\2\u01a1\u01a2\7v\2\2"+
		"\u01a2\u01a3\7/\2\2\u01a3\u01a4\7x\2\2\u01a4\u01a5\7k\2\2\u01a5\u01a6"+
		"\7u\2\2\u01a6\u01a7\7k\2\2\u01a7\u01a8\7v\2\2\u01a8\u01a9\7g\2\2\u01a9"+
		"\u01b8\7f\2\2\u01aa\u01ab\7n\2\2\u01ab\u01ac\7g\2\2\u01ac\u01ad\7c\2\2"+
		"\u01ad\u01ae\7u\2\2\u01ae\u01af\7v\2\2\u01af\u01b0\7/\2\2\u01b0\u01b1"+
		"\7x\2\2\u01b1\u01b2\7k\2\2\u01b2\u01b3\7u\2\2\u01b3\u01b4\7k\2\2\u01b4"+
		"\u01b5\7v\2\2\u01b5\u01b6\7g\2\2\u01b6\u01b8\7f\2\2\u01b7\u018e\3\2\2"+
		"\2\u01b7\u0195\3\2\2\2\u01b7\u019e\3\2\2\2\u01b7\u01aa\3\2\2\2\u01b8,"+
		"\3\2\2\2\u01b9\u01ba\7g\2\2\u01ba\u01bb\7z\2\2\u01bb\u01bc\7k\2\2\u01bc"+
		"\u01bd\7u\2\2\u01bd\u01c5\7v\2\2\u01be\u01bf\7g\2\2\u01bf\u01c0\7z\2\2"+
		"\u01c0\u01c1\7k\2\2\u01c1\u01c2\7u\2\2\u01c2\u01c3\7v\2\2\u01c3\u01c5"+
		"\7u\2\2\u01c4\u01b9\3\2\2\2\u01c4\u01be\3\2\2\2\u01c5.\3\2\2\2\u01c6\u01c7"+
		"\7q\2\2\u01c7\u01c8\7h\2\2\u01c8\u01c9\7/\2\2\u01c9\u01ca\7v\2\2\u01ca"+
		"\u01cb\7{\2\2\u01cb\u01cc\7r\2\2\u01cc\u01d9\7g\2\2\u01cd\u01ce\7p\2\2"+
		"\u01ce\u01cf\7q\2\2\u01cf\u01d0\7v\2\2\u01d0\u01d1\7/\2\2\u01d1\u01d2"+
		"\7q\2\2\u01d2\u01d3\7h\2\2\u01d3\u01d4\7/\2\2\u01d4\u01d5\7v\2\2\u01d5"+
		"\u01d6\7{\2\2\u01d6\u01d7\7r\2\2\u01d7\u01d9\7g\2\2\u01d8\u01c6\3\2\2"+
		"\2\u01d8\u01cd\3\2\2\2\u01d9\60\3\2\2\2\u01da\u01db\5u;\2\u01db\u01dc"+
		"\5w<\2\u01dc\u01dd\5\u0081A\2\u01dd\u01e0\3\2\2\2\u01de\u01e0\t\2\2\2"+
		"\u01df\u01da\3\2\2\2\u01df\u01de\3\2\2\2\u01e0\62\3\2\2\2\u01e1\u01e2"+
		"\5[.\2\u01e2\u01e3\5u;\2\u01e3\u01e4\5a\61\2\u01e4\u01e9\3\2\2\2\u01e5"+
		"\u01e6\7(\2\2\u01e6\u01e9\7(\2\2\u01e7\u01e9\7(\2\2\u01e8\u01e1\3\2\2"+
		"\2\u01e8\u01e5\3\2\2\2\u01e8\u01e7\3\2\2\2\u01e9\64\3\2\2\2\u01ea\u01eb"+
		"\5\u0089E\2\u01eb\u01ec\5w<\2\u01ec\u01ed\5}?\2\u01ed\u01f0\3\2\2\2\u01ee"+
		"\u01f0\7`\2\2\u01ef\u01ea\3\2\2\2\u01ef\u01ee\3\2\2\2\u01f0\66\3\2\2\2"+
		"\u01f1\u01f2\5w<\2\u01f2\u01f3\5}?\2\u01f3\u01f8\3\2\2\2\u01f4\u01f5\7"+
		"~\2\2\u01f5\u01f8\7~\2\2\u01f6\u01f8\7~\2\2\u01f7\u01f1\3\2\2\2\u01f7"+
		"\u01f4\3\2\2\2\u01f7\u01f6\3\2\2\2\u01f88\3\2\2\2\u01f9\u01fa\7@\2\2\u01fa"+
		":\3\2\2\2\u01fb\u01fc\7@\2\2\u01fc\u01fd\7?\2\2\u01fd<\3\2\2\2\u01fe\u01ff"+
		"\7>\2\2\u01ff>\3\2\2\2\u0200\u0201\7>\2\2\u0201\u0202\7?\2\2\u0202@\3"+
		"\2\2\2\u0203\u0204\7?\2\2\u0204\u0207\7?\2\2\u0205\u0207\7?\2\2\u0206"+
		"\u0203\3\2\2\2\u0206\u0205\3\2\2\2\u0207B\3\2\2\2\u0208\u0209\7#\2\2\u0209"+
		"\u020a\7?\2\2\u020aD\3\2\2\2\u020b\u020c\5k\66\2\u020c\u020d\5e\63\2\u020d"+
		"F\3\2\2\2\u020e\u020f\5\u0081A\2\u020f\u0210\5i\65\2\u0210\u0211\5c\62"+
		"\2\u0211\u0212\5u;\2\u0212H\3\2\2\2\u0213\u0214\5c\62\2\u0214\u0215\5"+
		"q9\2\u0215\u0216\5\177@\2\u0216\u0217\5c\62\2\u0217J\3\2\2\2\u0218\u021a"+
		"\t\3\2\2\u0219\u0218\3\2\2\2\u021a\u021b\3\2\2\2\u021b\u0219\3\2\2\2\u021b"+
		"\u021c\3\2\2\2\u021cL\3\2\2\2\u021d\u0220\5W,\2\u021e\u0220\5Y-\2\u021f"+
		"\u021d\3\2\2\2\u021f\u021e\3\2\2\2\u0220N\3\2\2\2\u0221\u0222\7*\2\2\u0222"+
		"P\3\2\2\2\u0223\u0224\7+\2\2\u0224R\3\2\2\2\u0225\u0226\7\61\2\2\u0226"+
		"\u0227\7,\2\2\u0227\u022b\3\2\2\2\u0228\u022a\13\2\2\2\u0229\u0228\3\2"+
		"\2\2\u022a\u022d\3\2\2\2\u022b\u022c\3\2\2\2\u022b\u0229\3\2\2\2\u022c"+
		"\u022e\3\2\2\2\u022d\u022b\3\2\2\2\u022e\u022f\7,\2\2\u022f\u0230\7\61"+
		"\2\2\u0230\u0231\3\2\2\2\u0231\u0232\b*\2\2\u0232T\3\2\2\2\u0233\u0235"+
		"\t\4\2\2\u0234\u0233\3\2\2\2\u0235\u0236\3\2\2\2\u0236\u0234\3\2\2\2\u0236"+
		"\u0237\3\2\2\2\u0237\u0238\3\2\2\2\u0238\u0239\b+\2\2\u0239V\3\2\2\2\u023a"+
		"\u023b\5\u0081A\2\u023b\u023c\5}?\2\u023c\u023d\5\u0083B\2\u023d\u023e"+
		"\5c\62\2\u023eX\3\2\2\2\u023f\u0240\5e\63\2\u0240\u0241\5[.\2\u0241\u0242"+
		"\5q9\2\u0242\u0243\5\177@\2\u0243\u0244\5c\62\2\u0244Z\3\2\2\2\u0245\u0246"+
		"\t\5\2\2\u0246\\\3\2\2\2\u0247\u0248\t\6\2\2\u0248^\3\2\2\2\u0249\u024a"+
		"\t\7\2\2\u024a`\3\2\2\2\u024b\u024c\t\b\2\2\u024cb\3\2\2\2\u024d\u024e"+
		"\t\t\2\2\u024ed\3\2\2\2\u024f\u0250\t\n\2\2\u0250f\3\2\2\2\u0251\u0252"+
		"\t\13\2\2\u0252h\3\2\2\2\u0253\u0254\t\f\2\2\u0254j\3\2\2\2\u0255\u0256"+
		"\t\r\2\2\u0256l\3\2\2\2\u0257\u0258\t\16\2\2\u0258n\3\2\2\2\u0259\u025a"+
		"\t\17\2\2\u025ap\3\2\2\2\u025b\u025c\t\20\2\2\u025cr\3\2\2\2\u025d\u025e"+
		"\t\21\2\2\u025et\3\2\2\2\u025f\u0260\t\22\2\2\u0260v\3\2\2\2\u0261\u0262"+
		"\t\23\2\2\u0262x\3\2\2\2\u0263\u0264\t\24\2\2\u0264z\3\2\2\2\u0265\u0266"+
		"\t\25\2\2\u0266|\3\2\2\2\u0267\u0268\t\26\2\2\u0268~\3\2\2\2\u0269\u026a"+
		"\t\27\2\2\u026a\u0080\3\2\2\2\u026b\u026c\t\30\2\2\u026c\u0082\3\2\2\2"+
		"\u026d\u026e\t\31\2\2\u026e\u0084\3\2\2\2\u026f\u0270\t\32\2\2\u0270\u0086"+
		"\3\2\2\2\u0271\u0272\t\33\2\2\u0272\u0088\3\2\2\2\u0273\u0274\t\34\2\2"+
		"\u0274\u008a\3\2\2\2\u0275\u0276\t\35\2\2\u0276\u008c\3\2\2\2\u0277\u0278"+
		"\t\36\2\2\u0278\u008e\3\2\2\2\u0279\u027a\13\2\2\2\u027a\u0090\3\2\2\2"+
		"\17\2\u01b7\u01c4\u01d8\u01df\u01e8\u01ef\u01f7\u0206\u021b\u021f\u022b"+
		"\u0236\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}